@model IEnumerable<JourneyMate.Application.ViewModel.ItineraryDayVm>

@{
    ViewData["Title"] = $"Itineraries - {ViewBag.TravelTitle}";
    Layout = "_CompanyLayout";
    var travelId = ViewBag.TravelId;
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h2 class="mb-1 text-primary">
                                <i class="fas fa-route me-2"></i>Travel Itineraries
                            </h2>
                            <p class="text-muted mb-0">
                                <strong>@ViewBag.TravelTitle</strong>
                            </p>
                        </div>
                        <div>
                            <a href="@Url.Action("Index", "Travel")"
                               class="btn btn-outline-secondary me-2">
                                <i class="fas fa-arrow-left me-1"></i>Back to Travel
                            </a>
                            <a href="@Url.Action("CreateItinerary", "Itinerary", new { travelId = travelId })"
                               class="btn btn-success">
                                <i class="fas fa-plus me-1"></i>Add New Day
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <!-- Itineraries List -->
        <div class="row">
            @foreach (var itinerary in Model.OrderBy(i => i.DayNumber))
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card h-100 shadow-sm border-0 itinerary-card">
                        <!-- Day Header -->
                        <div class="card-header bg-gradient-primary text-white border-0">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">
                                    <i class="fas fa-calendar-day me-2"></i>Day @itinerary.DayNumber
                                </h5>
                                <span class="badge bg-light text-primary">
                                    @if (itinerary.StartTime.HasValue && itinerary.EndTime.HasValue)
                                    {
                                        <span>@itinerary.StartTime?.ToString(@"hh\:mm") - @itinerary.EndTime?.ToString(@"hh\:mm")</span>
                                    }
                                    else
                                    {
                                        <span>Full Day</span>
                                    }
                                </span>
                            </div>
                        </div>

                        <div class="card-body">
                            <!-- Title -->
                            <h6 class="card-title text-dark mb-3">
                                <i class="fas fa-map-marker-alt text-danger me-2"></i>@itinerary.Title
                            </h6>

                            <!-- Location -->
                            @if (!string.IsNullOrEmpty(itinerary.Location))
                            {
                                <p class="text-muted mb-2">
                                    <i class="fas fa-location-dot me-2"></i>
                                    <small>@itinerary.Location</small>
                                </p>
                            }

                            <!-- Description -->
                            <p class="card-text text-muted mb-3">
                                @if (itinerary.Description.Length > 100)
                                {
                                    @itinerary.Description.Substring(0, 100)

                                    <span>...</span>
                                }
                                else
                                {
                                    @itinerary.Description
                                }
                            </p>

                            <!-- Activities -->
                            @if (itinerary.Activities != null && itinerary.Activities.Any())
                            {
                                <div class="mb-3">
                                    <h6 class="text-primary mb-2">
                                        <i class="fas fa-list-check me-1"></i>Activities
                                    </h6>
                                    <div class="d-flex flex-wrap gap-1">
                                        @foreach (var activity in itinerary.Activities.Take(3))
                                        {
                                            <span class="badge bg-light text-dark border">@activity</span>
                                        }
                                        @if (itinerary.Activities.Count > 3)
                                        {
                                            <span class="badge bg-secondary">+@(itinerary.Activities.Count - 3) more</span>
                                        }
                                    </div>
                                </div>
                            }

                            <!-- Meals Included -->
                            <div class="mb-3">
                                <h6 class="text-primary mb-2">
                                    <i class="fas fa-utensils me-1"></i>Meals Included
                                </h6>
                                <div class="d-flex gap-2">
                                    <span class="badge @(itinerary.IncludesBreakfast ? "bg-success" : "bg-light text-muted")">
                                        <i class="fas fa-coffee me-1"></i>Breakfast
                                    </span>
                                    <span class="badge @(itinerary.IncludesLunch ? "bg-success" : "bg-light text-muted")">
                                        <i class="fas fa-hamburger me-1"></i>Lunch
                                    </span>
                                    <span class="badge @(itinerary.IncludesDinner ? "bg-success" : "bg-light text-muted")">
                                        <i class="fas fa-pizza-slice me-1"></i>Dinner
                                    </span>
                                </div>
                            </div>

                            <!-- Notes -->
                            @if (!string.IsNullOrEmpty(itinerary.Notes))
                            {
                                <div class="mb-3">
                                    <small class="text-muted">
                                        <i class="fas fa-sticky-note me-1"></i>
                                        <em>@itinerary.Notes</em>
                                    </small>
                                </div>
                            }
                        </div>

                        <!-- Card Footer with Actions -->
                        <div class="card-footer bg-transparent border-0">
                            <div class="d-flex justify-content-between align-items-center">
                                <small class="text-muted">
                                    @if (itinerary.StartTime.HasValue)
                                    {
                                        <i class="fas fa-clock me-1"></i>

                                        @itinerary.StartTime?.ToString(@"hh\:mm")
                                    }
                                </small>
                                <div>
                                    <a href="@Url.Action("EditItinerary", "Itinerary", new { id = itinerary.Id })"
                                       class="btn btn-sm btn-outline-primary">
                                        <i class="fas fa-edit me-1"></i>Edit
                                    </a>
                                    <button type="button" class="btn btn-sm btn-outline-danger ms-1"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal"
                                            data-itinerary-id="@itinerary.Id"
                                            data-itinerary-title="Day @itinerary.DayNumber - @itinerary.Title">
                                        <i class="fas fa-trash me-1"></i>Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <!-- Empty State -->
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm border-0">
                    <div class="card-body text-center py-5">
                        <div class="mb-4">
                            <i class="fas fa-route text-muted" style="font-size: 4rem;"></i>
                        </div>
                        <h4 class="text-muted mb-3">No Itineraries Found</h4>
                        <p class="text-muted mb-4">
                            This travel doesn't have any itineraries yet. Start by adding the first day of your journey.
                        </p>
                        <a href="@Url.Action("CreateItinerary", "Itinerary", new { travelId = travelId })"
                           class="btn btn-primary btn-lg">
                            <i class="fas fa-plus me-2"></i>Add First Day
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal - Replace your existing modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-0">Are you sure you want to delete this itinerary?</p>
                <p class="text-muted mb-0" id="itineraryToDelete"></p>
                <div class="alert alert-warning mt-3 mb-0">
                    <i class="fas fa-exclamation-circle me-2"></i>
                    <strong>Warning:</strong> This action cannot be undone.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-1"></i>Cancel
                </button>
                <form method="post" id="deleteForm" style="display: inline;">
                    <!-- Form content will be populated by JavaScript -->
                </form>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .modal-backdrop.show {
            display: none;
        }
        .bg-gradient-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }

        .itinerary-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

            .itinerary-card:hover {
                transform: translateY(-5px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
            }

        .card-header h5 {
            font-weight: 600;
        }

        .badge {
            font-size: 0.75rem;
        }

        .btn-sm {
            padding: 0.25rem 0.75rem;
            font-size: 0.875rem;
        }

        .card-title {
            font-weight: 600;
            color: #2c3e50;
        }

        .text-primary {
            color: #667eea !important;
        }

        .btn-primary {
            background-color: #667eea;
            border-color: #667eea;
        }

            .btn-primary:hover {
                background-color: #5a6fd8;
                border-color: #5a6fd8;
            }
    </style>
}

@section Scripts {
    <script>
        // Handle delete modal
        document.addEventListener('DOMContentLoaded', function() {
            const deleteModal = document.getElementById('deleteModal');
            if (deleteModal) {
                deleteModal.addEventListener('show.bs.modal', function (event) {
                    const button = event.relatedTarget;
                    const itineraryId = button.getAttribute('data-itinerary-id');
                    const itineraryTitle = button.getAttribute('data-itinerary-title');
                    const travelId = @ViewBag.TravelId; // Get travel ID from ViewBag

                    const deleteForm = document.getElementById('deleteForm');
                    const itineraryToDelete = document.getElementById('itineraryToDelete');

                    // Update form action to match your controller route
                    deleteForm.action = '@Url.Action("DeleteItinerary", "Itinerary")';

                    // Add hidden inputs for id and travelId
                    deleteForm.innerHTML = `
        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="${itineraryId}" />
                        <input type="hidden" name="travelId" value="${travelId}" />
                        <button type="submit" class="btn btn-danger">
                            <i class="fas fa-trash me-1"></i>Delete
                        </button>
                    `;

                    // Update modal text
                    itineraryToDelete.textContent = itineraryTitle;
                });
            }
        });

        // Add smooth scrolling animation for better UX
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth'
                    });
                }
            });
        });
    </script>
}
     