@model UserVm

@{
    ViewData["Title"] = "User Details - JourneyMate";
}

<style>
    @@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: 'Inter', sans-serif;
        min-height: 100vh;
        color: #333;
    }

    .details-container {
        max-width: 900px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .header-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        border-radius: 16px 16px 0 0;
        position: relative;
        overflow: hidden;
    }

        .header-section::before {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            width: 100px;
            height: 100px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            transform: translate(30px, -30px);
        }

        .header-section::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 150px;
            height: 150px;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 50%;
            transform: translate(-50px, 50px);
        }

    .header-content {
        position: relative;
        z-index: 2;
    }

    .user-avatar {
        width: 80px;
        height: 80px;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        font-weight: 600;
        margin-bottom: 1rem;
        border: 3px solid rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(10px);
    }

    .header-title {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        letter-spacing: -0.5px;
    }

    .header-subtitle {
        font-size: 1rem;
        opacity: 0.9;
        font-weight: 400;
    }

    .details-card {
        background: white;
        border-radius: 0 0 16px 16px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .details-content {
        padding: 2rem;
    }

    .info-grid {
        display: grid;
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .info-item {
        background: #f8fafc;
        border: 1px solid #e2e8f0;
        border-radius: 12px;
        padding: 1.5rem;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .info-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 4px;
            height: 100%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .info-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            border-color: #667eea;
        }

            .info-item:hover::before {
                opacity: 1;
            }

    .info-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        color: #475569;
        margin-bottom: 0.75rem;
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .info-icon {
        width: 18px;
        height: 18px;
        opacity: 0.7;
    }

    .info-value {
        font-size: 1.1rem;
        color: #1e293b;
        font-weight: 500;
        word-break: break-all;
    }

    .roles-section {
        background: #f1f5f9;
        border-radius: 12px;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .roles-title {
        font-size: 1.1rem;
        font-weight: 600;
        color: #475569;
        margin-bottom: 1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .roles-list {
        display: flex;
        flex-wrap: wrap;
        gap: 0.5rem;
    }

    .role-badge {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
        box-shadow: 0 2px 8px rgba(102, 126, 234, 0.3);
        position: relative;
        overflow: hidden;
    }

        .role-badge::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s ease;
        }

        .role-badge:hover::before {
            left: 100%;
        }

    .actions-section {
        border-top: 1px solid #e2e8f0;
        padding: 2rem;
        background: #fafbfc;
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        justify-content: center;
    }

    .action-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.875rem 1.5rem;
        border-radius: 12px;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        border: 2px solid transparent;
        position: relative;
        overflow: hidden;
    }

    .btn-primary {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.6);
            color: white;
        }

    .btn-secondary {
        background: white;
        color: #475569;
        border-color: #e2e8f0;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

        .btn-secondary:hover {
            background: #f8fafc;
            border-color: #cbd5e1;
            transform: translateY(-2px);
            color: #334155;
        }

    .btn-icon {
        width: 18px;
        height: 18px;
    }

    .stats-section {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
        margin-bottom: 2rem;
    }

    .stat-item {
        background: linear-gradient(135deg, #667eea10, #764ba210);
        border: 1px solid #e2e8f0;
        border-radius: 12px;
        padding: 1.5rem;
        text-align: center;
    }

    .stat-value {
        font-size: 1.5rem;
        font-weight: 700;
        color: #667eea;
        margin-bottom: 0.5rem;
    }

    .stat-label {
        color: #64748b;
        font-size: 0.9rem;
        font-weight: 500;
    }

    @@media (max-width: 768px) {
        .details-container

    {
        margin: 1rem auto;
        padding: 0 0.5rem;
    }

    .header-section {
        padding: 1.5rem;
        border-radius: 12px 12px 0 0;
    }

    .header-title {
        font-size: 1.5rem;
    }

    .user-avatar {
        width: 60px;
        height: 60px;
        font-size: 1.5rem;
    }

    .details-content {
        padding: 1.5rem;
    }

    .actions-section {
        padding: 1.5rem;
        justify-content: stretch;
    }

    .action-btn {
        flex: 1;
        justify-content: center;
        min-width: 120px;
    }

    .details-card {
        border-radius: 0 0 12px 12px;
    }

    }

    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(255, 255, 255, 0.9);
        display: none;
        align-items: center;
        justify-content: center;
        z-index: 1000;
    }

    .spinner {
        width: 40px;
        height: 40px;
        border: 4px solid #f3f4f6;
        border-top: 4px solid #667eea;
        border-radius: 50%;
        animation: spin 1s linear infinite;
    }

    @@keyframes spin {
        0%

    {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

    }
</style>

<div class="details-container">
    <div class="header-section">
        <div class="header-content">
            <div class="user-avatar">
                @if (!string.IsNullOrEmpty(Model.FullName))
                {
                    @Model.FullName.Substring(0, 1).ToUpper()
                }
                else
                {
                    @("U")
                }
            </div>
            <h1 class="header-title">@(Model.FullName ?? "User Details")</h1>
            <p class="header-subtitle">User Information & Account Details</p>
        </div>
    </div>

    <div class="details-card">
        <div class="details-content">
            <!-- User Information -->
            <div class="info-grid">
                <div class="info-item">
                    <div class="info-label">
                        <svg class="info-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                        </svg>
                        Full Name
                    </div>
                    <div class="info-value">@(Model.FullName ?? "Not provided")</div>
                </div>

                <div class="info-item">
                    <div class="info-label">
                        <svg class="info-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                        </svg>
                        Email Address
                    </div>
                    <div class="info-value">@(Model.Email ?? "Not provided")</div>
                </div>

                <div class="info-item">
                    <div class="info-label">
                        <svg class="info-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                        </svg>
                        Phone Number
                    </div>
                    <div class="info-value">@(Model.PhoneNumber ?? "Not provided")</div>
                </div>

                <div class="info-item">
                    <div class="info-label">
                        <svg class="info-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
                        </svg>
                        User ID
                    </div>
                    <div class="info-value" style="font-family: 'Courier New', monospace; font-size: 0.9rem;">@Model.Id</div>
                </div>
            </div>

            <!-- Roles Section -->
            @if (Model.Roles != null && Model.Roles.Any())
            {
                <div class="roles-section">
                    <div class="roles-title">
                        <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"></path>
                        </svg>
                        Assigned Roles
                    </div>
                    <div class="roles-list">
                        @foreach (var role in Model.Roles)
                        {
                            <span class="role-badge">@role</span>
                        }
                    </div>
                </div>
            }

            <!-- Stats Section -->
            <div class="stats-section">
                <div class="stat-item">
                    <div class="stat-value">@(Model.Roles?.Count() ?? 0)</div>
                    <div class="stat-label">Active Roles</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">
                        @if (!string.IsNullOrEmpty(Model.Email))
                        {
                            <span style="color: #10b981;">✓</span>
                        }
                        else
                        {
                            <span style="color: #ef4444;">✗</span>
                        }
                    </div>
                    <div class="stat-label">Email Status</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value">
                        @if (!string.IsNullOrEmpty(Model.PhoneNumber))
                        {
                            <span style="color: #10b981;">✓</span>
                        }
                        else
                        {
                            <span style="color: #ef4444;">✗</span>
                        }
                    </div>
                    <div class="stat-label">Phone Status</div>
                </div>
            </div>
        </div>

        <!-- Actions Section -->
        <div class="actions-section">
            <a asp-action="Edit" asp-route-id="@Model.Id" class="action-btn btn-primary">
                <svg class="btn-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
                </svg>
                Edit User
            </a>
            <a asp-action="Index" class="action-btn btn-secondary">
                <svg class="btn-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Back to List
            </a>
        </div>
    </div>
</div>

<!-- Loading Overlay -->
<div class="loading-overlay" id="loadingOverlay">
    <div class="spinner"></div>
</div>

<script>
    // Add loading states for navigation
    document.querySelectorAll('.action-btn').forEach(btn => {
        btn.addEventListener('click', function(e) {
            if (this.href) {
                document.getElementById('loadingOverlay').style.display = 'flex';
            }
        });
    });

    // Copy user ID to clipboard
    document.querySelector('.info-value[style*="Courier"]').addEventListener('click', function() {
        navigator.clipboard.writeText(this.textContent).then(function() {
            // You could add a toast notification here
            console.log('User ID copied to clipboard');
        });
    });

    // Add smooth scroll behavior
    document.documentElement.style.scrollBehavior = 'smooth';
</script>