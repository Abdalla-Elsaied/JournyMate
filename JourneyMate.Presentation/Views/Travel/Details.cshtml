@model TravelVm
@{
    ViewData["Title"] = "Travel Details";
    Layout = "_CompanyLayout";
}
<style>
    .detail-card {
        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        overflow: hidden;
        transition: all 0.3s ease;
    }

        .detail-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0,0,0,0.15);
        }

    .hero-section {
        position: relative;
        height: 400px;
        background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
        overflow: hidden;
    }

    .hero-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        color: white;
        z-index: 2;
    }

    .hero-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.4);
        z-index: 1;
    }

    .cover-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        z-index: 0;
    }

    .profile-image {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        border: 5px solid white;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        object-fit: cover;
        margin: 0 auto;
        display: block;
        transform: translateY(-60px);
        position: relative;
        z-index: 3;
    }

    .section-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 15px 20px;
        border-radius: 10px;
        margin-bottom: 20px;
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }

    .info-card {
        background: white;
        border-radius: 12px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 5px 20px rgba(0,0,0,0.08);
        border-left: 4px solid #667eea;
        transition: all 0.3s ease;
    }

        .info-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.12);
        }

    .price-display {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        padding: 20px;
        border-radius: 15px;
        text-align: center;
        box-shadow: 0 10px 30px rgba(40, 167, 69, 0.3);
    }

    .original-price {
        text-decoration: line-through;
        opacity: 0.7;
        font-size: 1.1rem;
    }

    .current-price {
        font-size: 2.5rem;
        font-weight: bold;
        text-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }

    .discount-badge {
        background: #dc3545;
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: bold;
        display: inline-block;
        margin-top: 10px;
    }

    .amenity-tag {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 0.9rem;
        margin: 5px;
        display: inline-block;
        box-shadow: 0 3px 10px rgba(102, 126, 234, 0.3);
        transition: all 0.3s ease;
    }

        .amenity-tag:hover {
            transform: scale(1.05);
        }

    .included-tag {
        background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        color: white;
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 0.9rem;
        margin: 5px;
        display: inline-block;
        box-shadow: 0 3px 10px rgba(40, 167, 69, 0.3);
    }

    .not-included-tag {
        background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
        color: white;
        padding: 8px 15px;
        border-radius: 20px;
        font-size: 0.9rem;
        margin: 5px;
        display: inline-block;
        box-shadow: 0 3px 10px rgba(220, 53, 69, 0.3);
    }

    .gallery-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .gallery-item {
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        cursor: pointer;
    }

        .gallery-item:hover {
            transform: scale(1.05);
            box-shadow: 0 20px 40px rgba(0,0,0,0.2);
        }

        .gallery-item img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            transition: all 0.3s ease;
        }

        .gallery-item:hover img {
            transform: scale(1.1);
        }

    .status-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 8px 15px;
        border-radius: 20px;
        font-weight: bold;
        font-size: 0.85rem;
        z-index: 4;
    }

    .status-available {
        background: #28a745;
        color: white;
    }

    .status-full {
        background: #dc3545;
        color: white;
    }

    .status-limited {
        background: #ffc107;
        color: #212529;
    }

    .map-container {
        height: 400px;
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        border: 3px solid #e9ecef;
    }

    .location-info {
        background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
        color: white;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 15px;
        text-align: center;
    }

    .date-time-card {
        background: linear-gradient(135deg, #6f42c1 0%, #5a2d91 100%);
        color: white;
        padding: 20px;
        border-radius: 15px;
        text-align: center;
        margin-bottom: 20px;
    }

    .transportation-icon {
        font-size: 3rem;
        margin-bottom: 15px;
        color: #667eea;
    }

    .info-label {
        font-weight: 600;
        color: #495057;
        margin-bottom: 5px;
    }

    .info-value {
        font-size: 1.1rem;
        color: #212529;
        margin-bottom: 15px;
    }

    .action-buttons {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 1000;
    }

    .floating-btn {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        margin: 10px 0;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.5rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.2);
        transition: all 0.3s ease;
        border: none;
        text-decoration: none;
        color: white;
    }

        .floating-btn:hover {
            transform: scale(1.1);
            box-shadow: 0 15px 40px rgba(0,0,0,0.3);
            color: white;
        }

    .btn-edit {
        background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%);
    }

    .btn-Delete {
        background: linear-gradient(135deg, #dc3545 0%, #a71d2a 100%);
    }

    .btn-back {
        background: linear-gradient(135deg, #6c757d 0%, #545b62 100%);
    }

    .animated-counter {
        font-size: 2rem;
        font-weight: bold;
        color: #667eea;
    }

    @@keyframes fadeInUp {
        from

    {
        opacity: 0;
        transform: translateY(30px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .fade-in-up {
        animation: fadeInUp 0.6s ease-out;
    }

    .modal-dialog-centered {
        display: flex;
        align-items: center;
        min-height: calc(100% - 1rem);
    }

    .gallery-modal .modal-content {
        background: transparent;
        border: none;
    }

    .gallery-modal .modal-body {
        padding: 0;
        text-align: center;
    }

    .gallery-modal img {
        max-width: 100%;
        max-height: 80vh;
        border-radius: 10px;
        box-shadow: 0 20px 60px rgba(0,0,0,0.5);
    }

    .close-btn {
        position: absolute;
        top: 15px;
        right: 25px;
        color: white;
        font-size: 2rem;
        z-index: 1051;
        background: rgba(0,0,0,0.5);
        border-radius: 50%;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }

    .company-info {
        background: linear-gradient(135deg, #343a40 0%, #495057 100%);
        color: white;
        padding: 20px;
        border-radius: 15px;
        margin-bottom: 20px;
    }
</style>

<div class="container-fluid px-4">
    <!-- Hero Section -->
    <div class="detail-card fade-in-up">
        <div class="hero-section">
            @if (!string.IsNullOrEmpty(Model.CoverImageUrl))
            {
                <img src="@Model.CoverImageUrl" alt="@Model.Title" class="cover-image" />
            }
            <div class="hero-overlay"></div>
            <div class="hero-content">
                <h1 class="display-4 mb-3">@Model.Title</h1>
                <p class="lead mb-0">@Model.CategoryName</p>
            </div>

            <!-- Status Badge -->
            @{
                string statusClass = "status-available";
                string statusText = "Available";
                if (Model.AvailableSeats <= 0)
                {
                    statusClass = "status-full";
                    statusText = "Fully Booked";
                }
                else if (Model.AvailableSeats <= 5)
                {
                    statusClass = "status-limited";
                    statusText = "Limited Seats";
                }
            }
            <div class="status-badge @statusClass">
                <i class="fas fa-users me-1"></i>@statusText
            </div>
        </div>

        <!-- Profile Image -->
        @if (!string.IsNullOrEmpty(Model.ProfileImageUrl))
        {
            <img src="@Model.ProfileImageUrl" alt="@Model.Title Profile" class="profile-image" />
        }
    </div>

    <div class="row mt-4">
        <!-- Left Column -->
        <div class="col-lg-8">
            <!-- Description Section -->
            <div class="info-card fade-in-up" style="animation-delay: 0.1s;">
                <div class="section-header">
                    <h4 class="mb-0"><i class="fas fa-info-circle me-2"></i>About This Travel</h4>
                </div>
                <p class="info-value">@Model.Description</p>
            </div>

            <!-- Location Information -->
            <div class="info-card fade-in-up" style="animation-delay: 0.2s;">
                <div class="section-header">
                    <h4 class="mb-0"><i class="fas fa-map-marker-alt me-2"></i>Journey Details</h4>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="location-info">
                            <i class="fas fa-play-circle fa-2x mb-2"></i>
                            <h6>Departure Point</h6>
                            <p class="mb-0">@Model.DeparturePoint</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="location-info">
                            <i class="fas fa-flag-checkered fa-2x mb-2"></i>
                            <h6>Destination</h6>
                            <p class="mb-0">@Model.DestinationCity</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Transportation & Amenities -->
            <div class="info-card fade-in-up" style="animation-delay: 0.3s;">
                <div class="section-header">
                    <h4 class="mb-0"><i class="fas fa-bus me-2"></i>Transportation & Services</h4>
                </div>

                <div class="text-center mb-4">
                    @{
                        string transportIcon = "fas fa-bus";
                        switch (Model.TransportationType?.ToLower())
                        {
                            case "train":
                                transportIcon = "fas fa-train";
                                break;
                            case "flight":
                                transportIcon = "fas fa-plane";
                                break;
                        }
                    }
                    <i class="@transportIcon transportation-icon"></i>
                    <h5>@Model.TransportationType</h5>
                </div>

                <!-- Amenities -->
                @if (Model.Amenities != null && Model.Amenities.Any())
                {
                    <div class="mb-4">
                        <h6 class="info-label">Amenities</h6>
                        <div>
                            @foreach (var amenity in Model.Amenities)
                            {
                                <span class="amenity-tag">
                                    <i class="fas fa-star me-1"></i>@amenity
                                </span>
                            }
                        </div>
                    </div>
                }

                <!-- What's Included -->
                @if (Model.Included != null && Model.Included.Any())
                {
                    <div class="mb-4">
                        <h6 class="info-label">What's Included</h6>
                        <div>
                            @foreach (var item in Model.Included)
                            {
                                <span class="included-tag">
                                    <i class="fas fa-check me-1"></i>@item
                                </span>
                            }
                        </div>
                    </div>
                }

                <!-- What's Not Included -->
                @if (Model.NotIncluded != null && Model.NotIncluded.Any())
                {
                    <div class="mb-3">
                        <h6 class="info-label">What's Not Included</h6>
                        <div>
                            @foreach (var item in Model.NotIncluded)
                            {
                                <span class="not-included-tag">
                                    <i class="fas fa-times me-1"></i>@item
                                </span>
                            }
                        </div>
                    </div>
                }
            </div>

            <!-- Gallery Section -->
            @if (Model.Images != null && Model.Images.Any())
            {
                <div class="info-card fade-in-up" style="animation-delay: 0.4s;">
                    <div class="section-header">
                        <h4 class="mb-0"><i class="fas fa-images me-2"></i>Photo Gallery</h4>
                    </div>

                    <div class="gallery-container">
                        @foreach (var image in Model.Images)
                        {
                            <div class="gallery-item" onclick="openGalleryModal('@image.ImageUrl', '@Html.Raw(Json.Serialize(Model.Images.Select(i => i.ImageUrl).ToList()))')">
                                <img src="@image.ImageUrl" alt="Travel Gallery" />
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <!-- Right Column -->
        <div class="col-lg-4">
            <!-- Pricing Information -->
            <div class="info-card fade-in-up" style="animation-delay: 0.5s;">
                <div class="price-display">
                    @if (Model.SaleDiscount > 0)
                    {
                        <div class="original-price">$@Model.BaseCost</div>
                        <div class="current-price">$@Model.Price</div>
                        <div class="discount-badge">@Model.SaleDiscount% OFF</div>
                    }
                    else
                    {
                        <div class="current-price">$@Model.Price</div>
                    }
                    <small class="d-block mt-2">Per Person</small>
                </div>
            </div>

            <!-- Date & Time Information -->
            <div class="info-card fade-in-up" style="animation-delay: 0.6s;">
                <div class="date-time-card">
                    <i class="fas fa-calendar-alt fa-2x mb-3"></i>
                    <h6>Travel Schedule</h6>
                    <div class="row text-center">
                        <div class="col-6">
                            <small>Departure</small>
                            <div>@Model.StartDate.ToString("MMM dd, yyyy")</div>
                            <div>@Model.StartDate.ToString("HH:mm")</div>
                        </div>
                        <div class="col-6">
                            <small>Return</small>
                            <div>@Model.EndDate.ToString("MMM dd, yyyy")</div>
                            <div>@Model.EndDate.ToString("HH:mm")</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Availability Information -->
            <div class="info-card fade-in-up" style="animation-delay: 0.7s;">
                <div class="section-header">
                    <h5 class="mb-0"><i class="fas fa-users me-2"></i>Availability</h5>
                </div>

                <div class="text-center">
                    <div class="animated-counter" id="seatCounter">@Model.AvailableSeats</div>
                    <p class="mb-2">Seats Available</p>

                    @{
                        int totalSeats = Model.AvailableSeats;
                    }

                    <div class="progress mb-3" style="height: 10px;">
                        <div class="progress-bar bg-success" role="progressbar" style="width: 100%"></div>
                    </div>
                </div>
            </div>

            <!-- Quick Stats -->
            <div class="info-card fade-in-up" style="animation-delay: 0.9s;">
                <div class="section-header">
                    <h5 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Quick Stats</h5>
                </div>

                <div class="row text-center">
                    <div class="col-6 mb-3">
                        <i class="fas fa-clock fa-2x text-primary mb-2"></i>
                        <div class="info-label">Duration</div>
                        <div class="info-value">
                            @{
                                var duration = Model.EndDate - Model.StartDate;
                                string durationText = duration.Days > 0 ? $"{duration.Days} days" : $"{duration.Hours} hours";
                            }
                            @durationText
                        </div>
                    </div>
                    <div class="col-6 mb-3">
                        <i class="fas fa-tag fa-2x text-success mb-2"></i>
                        <div class="info-label">Category</div>
                        <div class="info-value">@Model.CategoryName</div>
                    </div>
                    <div class="col-6">
                        <i class="fas fa-calendar-plus fa-2x text-info mb-2"></i>
                        <div class="info-label">Created</div>
                        <div class="info-value">@Model.CreationDate.ToString("MMM yyyy")</div>
                    </div>
                    <div class="col-6">
                        <i class="fas fa-star fa-2x text-warning mb-2"></i>
                        <div class="info-label">Rating</div>
                        <div class="info-value">4.8/5</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Floating Action Buttons -->
<div class="action-buttons">
    <a href="@Url.Action("Update", "Travel", new { id = Model.Id })" class="floating-btn btn-edit" title="Edit Travel">
        <i class="fas fa-edit"></i>
    </a>
    <a href="@Url.Action("Delete", "Travel", new { id = Model.Id })" class="floating-btn btn-Delete" title="Delete Travel">
        <i class="fas fa-trash-alt"></i> <!-- This is the correct trash icon -->
    </a>
    <a href="@Url.Action("Index", "Travel")" class="floating-btn btn-back" title="Back to List">
        <i class="fas fa-arrow-left"></i>
    </a>
</div>

<!-- Gallery Modal -->
<div class="modal fade gallery-modal" id="galleryModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-xl">
        <div class="modal-content">
            <div class="close-btn" data-bs-dismiss="modal">
                <i class="fas fa-times"></i>
            </div>
            <div class="modal-body">
                <img id="modalImage" src="" alt="Gallery Image" />
                <div class="text-center mt-3">
                    <button class="btn btn-light btn-sm me-2" onclick="previousImage()">
                        <i class="fas fa-chevron-left"></i> Previous
                    </button>
                    <span id="imageCounter" class="text-white"></span>
                    <button class="btn btn-light btn-sm ms-2" onclick="nextImage()">
                        Next <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Leaflet CSS and JS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"></script>
    <script>
        $(document).ready(function() {
            // Animate counter on page load
            animateCounter();

            // Add stagger animation to cards
            $('.fade-in-up').each(function(index) {
                $(this).css('animation-delay', (index * 0.1) + 's');
            });

            // Smooth scroll for anchor links
            $('a[href^="#"]').on('click', function(event) {
                var target = $(this.getAttribute('href'));
                if (target.length) {
                    event.preventDefault();
                    $('html, body').stop().animate({
                        scrollTop: target.offset().top - 100
                    }, 1000);
                }
            });

            // Add scroll effects
            $(window).scroll(function() {
                const scrollTop = $(this).scrollTop();

                // Parallax effect for hero section
                $('.hero-section').css('transform', 'translateY(' + (scrollTop * 0.5) + 'px)');

                // Show/hide floating buttons based on scroll
                if (scrollTop > 300) {
                    $('.action-buttons').addClass('show');
                } else {
                    $('.action-buttons').removeClass('show');
                }
            });

            // Add tooltip functionality
            $('[data-bs-toggle="tooltip"]').tooltip();
        });

        // Gallery functionality
        let currentImages = [];
        let currentImageIndex = 0;

        function openGalleryModal(imageUrl, allImages) {
            try {
                currentImages = typeof allImages === 'string' ? JSON.parse(allImages) : allImages;
                currentImageIndex = currentImages.indexOf(imageUrl);

                $('#modalImage').attr('src', imageUrl);
                updateImageCounter();
                $('#galleryModal').modal('show');

                // Preload adjacent images for better performance
                preloadAdjacentImages();
            } catch (error) {
                console.error('Error opening gallery modal:', error);
            }
        }

        function previousImage() {
            if (currentImages.length === 0) return;

            currentImageIndex = (currentImageIndex - 1 + currentImages.length) % currentImages.length;
            updateModalImage();
        }

        function nextImage() {
            if (currentImages.length === 0) return;

            currentImageIndex = (currentImageIndex + 1) % currentImages.length;
            updateModalImage();
        }

        function updateModalImage() {
            const imageUrl = currentImages[currentImageIndex];
            $('#modalImage').fadeOut(200, function() {
                $(this).attr('src', imageUrl).fadeIn(200);
            });
            updateImageCounter();
            preloadAdjacentImages();
        }

        function updateImageCounter() {
            if (currentImages.length > 0) {
                $('#imageCounter').text((currentImageIndex + 1) + ' of ' + currentImages.length);
            }
        }

        function preloadAdjacentImages() {
            if (currentImages.length <= 1) return;

            // Preload previous and next images
            const prevIndex = (currentImageIndex - 1 + currentImages.length) % currentImages.length;
            const nextIndex = (currentImageIndex + 1) % currentImages.length;

            new Image().src = currentImages[prevIndex];
            new Image().src = currentImages[nextIndex];
        }

        // Keyboard navigation for gallery
        $(document).keydown(function(e) {
            if ($('#galleryModal').hasClass('show')) {
                switch(e.key) {
                    case 'ArrowLeft':
                        e.preventDefault();
                        previousImage();
                        break;
                    case 'ArrowRight':
                        e.preventDefault();
                        nextImage();
                        break;
                    case 'Escape':
                        e.preventDefault();
                        $('#galleryModal').modal('hide');
                        break;
                }
            }
        });

        // Touch/swipe support for mobile gallery navigation
        let touchStartX = 0;
        let touchEndX = 0;

        $('#galleryModal').on('touchstart', function(e) {
            touchStartX = e.changedTouches[0].screenX;
        });

        $('#galleryModal').on('touchend', function(e) {
            touchEndX = e.changedTouches[0].screenX;
            handleSwipe();
        });

        function handleSwipe() {
            const swipeThreshold = 50;
            const diff = touchStartX - touchEndX;

            if (Math.abs(diff) > swipeThreshold) {
                if (diff > 0) {
                    nextImage(); // Swipe left = next image
                } else {
                    previousImage(); // Swipe right = previous image
                }
            }
        }

        // Animate counter function
        function animateCounter() {
            const counter = $('#seatCounter');
            const target = parseInt(counter.text());

            if (isNaN(target)) return;

            let current = 0;
            const increment = target / 50; // Animate over 50 steps
            const timer = setInterval(function() {
                current += increment;
                if (current >= target) {
                    counter.text(target);
                    clearInterval(timer);
                } else {
                    counter.text(Math.floor(current));
                }
            }, 30);
        }

        // Enhanced image loading with error handling
        function handleImageError(img) {
            $(img).attr('src', '/images/placeholder.jpg').addClass('image-error');
        }

        // Add error handling to all images
        $('img').on('error', function() {
            handleImageError(this);
        });
    </script>
}